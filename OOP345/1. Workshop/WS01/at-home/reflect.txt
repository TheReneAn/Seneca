// Name: Youjin An
// Seneca Student ID:140413188
// Seneca email:yan24@myseneca.ca
// Date of completion:19 Jan, 2020
//
// I confirm that the content of this file is created by me,
// with the exception of the parts provided to me by my professor.

1. Learned in completing this particular workshop

I learned Linkage and static/dynamic variables.
Linkage have External Linkage and Internal Linkage.
'static' is lasts the entire lifetime of the program - use keyword static
'dynamic' is created using the keyword new - last until deallocated using the keyword delete

2. The difference between internal and external linkage using examples from your code 

External Linkage refers to an entity that is declared in a scope within another translation unit. 
I used the keyword 'extern' in the 'event.h' like "extern unsigned int g_sysClock;"
The global variable named g_sysClock that stores only positive integers.

Internal linkage refers to an entity that is invisible outside its own translation unit, 
but visible to other scopes within its translation unit. 
I used the keyword 'static' in the 'std::ostream& Event::display(std::ostream& os)const' function 
in the 'event.cpp' like "static int counter = 0;"
The following program allocates separate memories for the variables named 'counter' 
in implementation files 'event.cpp'

3. Mention any issues that caused you difficulty and how you solved them.

I was struggling for using Command-Line Arguments
I've never used it. So, I referred the part named 'Compilation and Execution' in oop345 website
The entry point of a C++ executable is its main() function.  
The return type of this function is an int.  
The main() function accepts either no information or a set of command-line arguments.

int main(int argc, char *argv[]); // two command-line arguments

And I also searched it at Google.
